BUGS:
    ✔ Super jump: jumping when climbing. @bug @done(20-12-07 12:20)
        It has something to do with the way it get to maxheight and it does it when scrolling.
        Maybe limit it based on air time rather than position?

GENERAL DESIGN:
    PLAYER:
        ☐ Visual design.
            ✔ Decide on the height. @done(20-12-01 18:06)
                * One or two chars? One.
        ✔ Movement design. @done(20-11-27 20:08)
            * It's update rate should be the same as the screen's, unlike the terrain which moves "forward" every terrain_update_time milliseconds.
            * It only changes it's vertical position.
            ✔ Fix player drops down before '\' char. @done(20-12-05 15:41)
        ✔ Jumping. @done(20-12-01 19:33)
            * Remember the offset during the jump
            * During the fall, the ground must move to keep the player at the same height: that means that the player only moves up or down from IY to IY - MAX_JUMP_HEIGHT.
            ✔ Fix falling: don't tp the ground to the player once it reaches the ground. @done(20-12-02 16:58)
            * Also fixed clipping issues when Jumping and during MaxHeight.
            ✔ Smoother scrolling up/down when offsetting the player. @high @done(20-12-03 12:03)
            ✔ "Remember" the player wanted to jump (if climbing) and jump ASAP. @done(20-12-07 14:23)
            ✘ Smooth scroll when the player's flat with the ground. @cancelled(21-03-30 15:23)
        ✔ Obstacle collision. @critical @done(20-12-03 19:05)

    TERRAIN:
        ☐ Visual design.
        *Column based (one column is a unit). Each unit should be related to the previous one.
            ✔ Colors? @done(21-01-03 23:47)
        ✔ Functional design. @done(20-11-27 20:08)
            * Should be smaller in lenght to the actual window and up to MAX_ROWS rows tall.
            * It's moving speed should increase from START_SPEED to MAX_SPEED as the player progresses.
            * Should vary in height, creating the illusion that the player's climbing/descending a mountain (or something else).
        ✔ Terrain generator. @started(20-11-30 12:02) @done(20-11-30 14:27) @lasted(2h25m46s)
            ✔ Generate more than one tile at a time. @done(20-12-02 14:48)
            ✔ Redo terrain generator. @critical @done(20-12-02 14:48)
                Maybe read about noise generators?
            ✔ Generate obstacles too! @critical @started(20-12-03 17:39) @done(20-12-03 18:26) @lasted(47m56s)
                Obstacle generation rules: (hopefully)
                * Cannot spawn immediately after an incline.
                * Can only spawn in flat units.
                * They have to be n units appart.
                * The lenght must not exceed 2/3 of the player's jumping distance.
            ☐ Biomes!
        ✔ Terrain "mover". @done(20-11-30 10:44)
            ✔ First attempt: Chrono. @done(20-11-30 10:43)
                * Basically, inside a loop, constantly check if n ammount of time has passed.
                * I'm sticking with this implementation, for now.
            ✔ Second attempt: using threads. @high @done(21-03-30 22:46)
                I think this is fine
        ✔ Terrain height offset. @done(20-11-30 16:17)
        ✔ Variable speed. @high @done(20-12-07 13:01)
            ✔ Change jump distance based on speed. @done(20-12-07 13:01)
            ☐ Decrease the speed when climbing?

    OBSTACLES:
        ☐ Visual design.
            ☐ Types.
                Tall and short obstacles!
        ✔ Functional design. @done(20-11-27 20:11)
            * Should be related somehow to the previous one and the terrain.
            * There can only be MAX_OBSATCLES_PER_SCREEN obstacles at a time.
            * Obstacle spawn offset is determined by new_obstacle_distance, which depends on min_obstacle_distance.

    ✔ Score? @done(20-12-04 15:16)
        ✔ Highscores! @done(21-01-07 17:15)
            ✔ Highlight terrain where the highscore is. @done(21-01-07 17:15)
            ✔ Fix file saving the score higher (+1). @done(21-01-07 18:14)
            ✔ Fix the game not updating the highscore after a new game. @done(21-01-08 15:08)
            ✔ Limit highscore saving: It can't be less than the screen update distance (width / 3). @done(21-01-08 16:28)
            ☐ Add a description to the highscore file.
    ☐ Extended ASCII table for more characters.
        No idea...
    ✔ Pause. @done(20-12-02 22:34)
    ✔ Starting menu. @done(20-12-04 13:07)
    ✔ Respawn. @done(20-12-04 13:21)
    ☐ Display controls.
        ✔ Terrain colors. @done(21-01-02 20:24)
        ✘ Player color. @cancelled(21-01-03 23:47)
            Decided that the player character should stay white.
    ✔ Organize in multiple files (just because). @done(20-12-07 18:21)
    ✔ Lower IY. @done(21-01-07 18:02)
    ✔ Move 'extern crate' statements to lib.rs. @done(21-01-06 19:51)
    ☐ Change the highscore file to also save controls and general configuration.

REFACTOR:
    ✔ Make a lib.rs file and put there color-related stuff, constants and every other thing that's in main() that shouldn't be there (anything that's not main(), basically). @done(21-01-04 01:00) @critical
    ✔ Make a Terrain struct and put everything data-related there. @critical @done(21-01-04 11:37)
    ✔ Make a Game struct to encapsulate all those variables. @done(21-01-04 16:29)
    ✔ Terrain and Player initialization has to be dealt with by each separate struct (::new() for Player and Terrain) @critical @done(21-01-04 12:41)
